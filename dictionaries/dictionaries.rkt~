#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 64 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 148 0 211 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1449 0 28 3 11 #"#lang dssl2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"# HW3: Dictionaries"
0 0 24 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"# ** You must work on your own for this assignment. **"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 6 #"import"
0 0 24 3 1 #" "
0 0 14 3 9 #"sbox_hash"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(5
 #"# A signature for the dictionary ADT. The contract parameters `K` and"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#"# `V` are the key and value types of the dictionary, respectively."
0 0 24 29 1 #"\n"
0 0 15 3 9 #"interface"
0 0 24 3 1 #" "
0 0 14 3 4 #"DICT"
0 0 24 3 1 #"["
0 0 14 3 1 #"K"
0 0 24 3 2 #", "
0 0 14 3 1 #"V"
0 0 24 3 2 #"]:"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 58
#"# Returns the number of key-value pairs in the dictionary."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"nat?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #"# Is the given key mapped by the dictionary?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 4 #"mem?"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"bool?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 68
#"# Gets the value associated with the given key; calls `error` if the"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 21 #"# key is not present."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"get"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 1 #"V"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 70
(6
 #"# Modifies the dictionary to associate the given key and value. If th"
 #"e"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #"# key already exists, its value is replaced."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #", "
0 0 14 3 5 #"value"
0 0 24 3 2 #": "
0 0 14 3 1 #"V"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"NoneC"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 70
(7
 #"# Modifes the dictionary by deleting the association of the given key"
 #"."
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"del"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"NoneC"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 62
#"# The following three methods connect the `_ in _`, `_[_]` and"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 61
#"# `_[_] = _` operators (as used in the example test below) to"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 59
#"# your method implementations above. That is, when `h` is a"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 14 #"# `DICT` then:"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 36 #"#   - `k in h`    means  `h.mem?(k)`"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 35 #"#   - `h[k]`      means  `h.get(k)`"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 38 #"#   - `h[k] = v`  means  `h.put(k, v)`"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 12 #"__contains__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 13 #"__index_ref__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 13 #"__index_set__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #", "
0 0 14 3 5 #"value"
0 0 24 3 2 #": "
0 0 14 3 1 #"V"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"_dict"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 15 #"AssociationList"
0 0 24 3 1 #"["
0 0 14 3 1 #"K"
0 0 24 3 2 #", "
0 0 14 3 1 #"V"
0 0 24 3 3 #"] ("
0 0 14 3 4 #"DICT"
0 0 24 3 2 #"):"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"head"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 6 #"length"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 22 #"#   ^ YOUR FIELDS HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 8 #"__init__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #"):"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 24 3 3 #" = "
0 0 21 3 4 #"None"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 6 #"length"
0 0 24 3 3 #" = "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"nat?"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 6 #"return"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 6 #"length"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 4 #"mem?"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"bool?"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 3 #" = "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 5 #"while"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #" "
0 0 15 3 2 #"is"
0 0 24 3 1 #" "
0 0 15 3 3 #"not"
0 0 24 3 1 #" "
0 0 21 3 4 #"None"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 15 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 15 3 6 #"return"
0 0 24 3 1 #" "
0 0 21 3 4 #"True"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"curr"
0 0 24 3 3 #" = "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 6 #"return"
0 0 24 3 1 #" "
0 0 21 3 5 #"False"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"get"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 1 #"V"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 3 #" = "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 5 #"while"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #" "
0 0 15 3 2 #"is"
0 0 24 3 1 #" "
0 0 15 3 3 #"not"
0 0 24 3 1 #" "
0 0 21 3 4 #"None"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 15 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 15 3 6 #"return"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 5 #"value"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"curr"
0 0 24 3 3 #" = "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 5 #"error"
0 0 24 3 1 #"("
0 0 19 3 15 #"\"key not found\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #", "
0 0 14 3 5 #"value"
0 0 24 3 2 #": "
0 0 14 3 1 #"V"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"NoneC"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 3 #" = "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 5 #"while"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #" "
0 0 15 3 2 #"is"
0 0 24 3 1 #" "
0 0 15 3 3 #"not"
0 0 24 3 1 #" "
0 0 21 3 4 #"None"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 15 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 3 #"key"
0 0 24 3 3 #" = "
0 0 14 3 3 #"key"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 5 #"value"
0 0 24 3 3 #" = "
0 0 14 3 5 #"value"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 15 3 6 #"return"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"curr"
0 0 24 3 3 #" = "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 24 3 4 #" =  "
0 0 14 3 5 #"_dict"
0 0 24 3 1 #"("
0 0 14 3 3 #"key"
0 0 24 3 1 #","
0 0 14 3 5 #"value"
0 0 24 3 1 #","
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 6 #"length"
0 0 24 3 3 #" = "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 23 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"del"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"NoneC"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 3 #" = "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 24 3 3 #" = "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 23 3 1 #"."
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 6 #"length"
0 0 24 3 3 #" = "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 23 3 1 #"-"
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"prev"
0 0 24 3 3 #" = "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"head"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 4 #"curr"
0 0 24 3 3 #" = "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 5 #"while"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 24 3 1 #" "
0 0 15 3 2 #"is"
0 0 24 3 1 #" "
0 0 15 3 3 #"not"
0 0 24 3 1 #" "
0 0 21 3 4 #"None"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 15 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 4 #"prev"
0 0 23 3 1 #"."
0 0 14 3 4 #"next"
0 0 24 3 3 #" = "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 6 #"length"
0 0 24 3 3 #" = "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 23 3 1 #"-"
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"curr"
0 0 24 3 3 #" = "
0 0 14 3 4 #"curr"
0 0 23 3 1 #"."
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 4 #"prev"
0 0 24 3 3 #" = "
0 0 14 3 4 #"prev"
0 0 23 3 1 #"."
0 0 14 3 4 #"next"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 12 #"# See above."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 12 #"__contains__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 3 #"): "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"mem?"
0 0 24 3 1 #"("
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 13 #"__index_ref__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 3 #"): "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 3 #"get"
0 0 24 3 1 #"("
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 13 #"__index_set__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #", "
0 0 14 3 5 #"value"
0 0 24 3 3 #"): "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 14 3 3 #"key"
0 0 24 3 2 #", "
0 0 14 3 5 #"value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 4 #"test"
0 0 24 3 1 #" "
0 0 19 3 21 #"'yOu nEeD MorE tEsTs'"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #" = "
0 0 14 3 15 #"AssociationList"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 19 3 7 #"'hello'"
0 0 24 3 1 #" "
0 0 15 3 3 #"not"
0 0 24 3 1 #" "
0 0 15 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"a"
0 0 24 3 1 #"["
0 0 19 3 7 #"'hello'"
0 0 24 3 4 #"] = "
0 0 21 3 1 #"5"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 23 3 1 #"."
0 0 14 3 3 #"len"
0 0 24 3 3 #"() "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 19 3 7 #"'hello'"
0 0 24 3 1 #" "
0 0 15 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #"["
0 0 19 3 7 #"'hello'"
0 0 24 3 2 #"] "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 15 3 4 #"test"
0 0 24 3 1 #" "
0 0 19 3 11 #"'put items'"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #" = "
0 0 14 3 15 #"AssociationList"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #"."
0 0 14 3 3 #"len"
0 0 24 3 3 #"() "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"b"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #","
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #"."
0 0 14 3 3 #"len"
0 0 24 3 3 #"() "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"b"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #","
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"b"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #","
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"b"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #","
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"b"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #","
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 23 3 1 #"."
0 0 14 3 3 #"len"
0 0 24 3 3 #"() "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 15 3 4 #"test"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"GET and DELETE items\""
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #" = "
0 0 14 3 15 #"AssociationList"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"c"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #","
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"c"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #","
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"c"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #","
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"c"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #","
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #"."
0 0 14 3 3 #"len"
0 0 24 3 3 #"() "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #"."
0 0 14 3 3 #"get"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #") "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"c"
0 0 23 3 1 #"."
0 0 14 3 3 #"del"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #"."
0 0 14 3 3 #"len"
0 0 24 3 3 #"() "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 12 #"assert_error"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #"."
0 0 14 3 3 #"get"
0 0 24 3 1 #"("
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 9 #"HashTable"
0 0 24 3 1 #"["
0 0 14 3 1 #"K"
0 0 24 3 2 #", "
0 0 14 3 1 #"V"
0 0 24 3 3 #"] ("
0 0 14 3 4 #"DICT"
0 0 24 3 2 #"):"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 5 #"_hash"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 5 #"_size"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 5 #"_data"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 8 #"__init__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 8 #"nbuckets"
0 0 24 3 2 #": "
0 0 14 3 4 #"nat?"
0 0 24 3 2 #", "
0 0 14 3 4 #"hash"
0 0 24 3 2 #": "
0 0 14 3 4 #"FunC"
0 0 24 3 1 #"["
0 0 14 3 4 #"AnyC"
0 0 24 3 2 #", "
0 0 14 3 4 #"nat?"
0 0 24 3 3 #"]):"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 5 #"_hash"
0 0 24 3 3 #" = "
0 0 14 3 4 #"hash"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 4 #"pass"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 38 #"#   ^ THE REST OF YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"nat?"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 4 #"pass"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 4 #"mem?"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"bool?"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 4 #"pass"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"get"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 1 #"V"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 4 #"pass"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #", "
0 0 14 3 5 #"value"
0 0 24 3 2 #": "
0 0 14 3 1 #"V"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"NoneC"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 4 #"pass"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 3 #"del"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #": "
0 0 14 3 1 #"K"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"NoneC"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 4 #"pass"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 70
(8
 #"# This avoids trying to print the hash function, since it's not reall"
 #"y"
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 45 #"# printable and isn\342\200\231t useful to see anyway:"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 9 #"__print__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 5 #"print"
0 0 24 3 2 #"):"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 14 3 5 #"print"
0 0 24 3 1 #"("
0 0 19 3 50 #"\"#<object:HashTable  _hash=... _size=%p _data=%p>\""
0 0 24 3 1 #","
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 5 #"_size"
0 0 24 3 2 #", "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 5 #"_data"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 12 #"# See above."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 12 #"__contains__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 3 #"): "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 4 #"mem?"
0 0 24 3 1 #"("
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 13 #"__index_ref__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 3 #"): "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 3 #"get"
0 0 24 3 1 #"("
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 13 #"__index_set__"
0 0 24 3 1 #"("
0 0 14 3 4 #"self"
0 0 24 3 2 #", "
0 0 14 3 3 #"key"
0 0 24 3 2 #", "
0 0 14 3 5 #"value"
0 0 24 3 3 #"): "
0 0 14 3 4 #"self"
0 0 23 3 1 #"."
0 0 14 3 3 #"put"
0 0 24 3 1 #"("
0 0 14 3 3 #"key"
0 0 24 3 2 #", "
0 0 14 3 5 #"value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"# first_char_hasher(String) -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 65
#"# A simple and bad hash function that just returns the ASCII code"
0 0 24 29 1 #"\n"
0 0 17 3 25 #"# of the first character."
0 0 24 29 1 #"\n"
0 0 17 3 55 #"# Useful for debugging because it's easily predictable."
0 0 24 29 1 #"\n"
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 17 #"first_char_hasher"
0 0 24 3 1 #"("
0 0 14 3 1 #"s"
0 0 24 3 2 #": "
0 0 14 3 4 #"str?"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"int?"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 23 3 1 #"."
0 0 14 3 3 #"len"
0 0 24 3 3 #"() "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 6 #"return"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 4 #"else"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 15 3 6 #"return"
0 0 24 3 1 #" "
0 0 14 3 3 #"int"
0 0 24 3 1 #"("
0 0 14 3 1 #"s"
0 0 24 3 1 #"["
0 0 21 3 1 #"0"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 4 #"test"
0 0 24 3 1 #" "
0 0 19 3 29 #"'yOu nEeD MorE tEsTs, part 2'"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 3 #" = "
0 0 14 3 9 #"HashTable"
0 0 24 3 1 #"("
0 0 21 3 2 #"10"
0 0 24 3 2 #", "
0 0 14 3 10 #"SboxHash64"
0 0 24 3 2 #"()"
0 0 23 3 1 #"."
0 0 14 3 4 #"hash"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 19 3 7 #"'hello'"
0 0 24 3 1 #" "
0 0 15 3 3 #"not"
0 0 24 3 1 #" "
0 0 15 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 1 #"h"
0 0 24 3 1 #"["
0 0 19 3 7 #"'hello'"
0 0 24 3 4 #"] = "
0 0 21 3 1 #"5"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 23 3 1 #"."
0 0 14 3 3 #"len"
0 0 24 3 3 #"() "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 19 3 7 #"'hello'"
0 0 24 3 1 #" "
0 0 15 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 6 #"assert"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #"["
0 0 19 3 7 #"'hello'"
0 0 24 3 2 #"] "
0 0 23 3 2 #"=="
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 12 #"compose_menu"
0 0 24 3 1 #"("
0 0 14 3 1 #"d"
0 0 24 3 2 #": "
0 0 14 3 5 #"DICT!"
0 0 24 3 2 #") "
0 0 23 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 5 #"DICT?"
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 4 #"pass"
0 0 24 29 1 #"\n"
0 0 17 3 26 #"#   ^ YOUR DEFINITION HERE"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 4 #"test"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"AssociationList menu\""
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 4 #"pass"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 15 3 4 #"test"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"HashTable menu\""
0 0 24 3 1 #":"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 15 3 4 #"pass"
0 0 24 29 1 #"\n"
0           0
